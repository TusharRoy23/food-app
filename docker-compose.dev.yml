version: '3'
services:
  db:
    container_name: food-app-db
    image: postgres
    restart: always
    env_file:
      - ./env/.env.dev
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - food_app_api
  pgamin:
    container_name: food-app-pgadmin4
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./env/.env.dev
    ports:
      - "${WEBSERVER_PORT}:${PGADMIN_LISTEN_PORT}"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin # Named volumn in container
    depends_on:
      - db
    networks:
      - food_app_api
  foodes01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: foodes01
    env_file:
      - ./env/.env.dev
    volumes:
      - foodEsData01:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    networks:
      - food_app_api
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_NODE}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ports:
      - 5601:5601
    depends_on:
      - foodes01
    networks:
      - food_app_api
  dev:
    container_name: food-app-dev
    image: food-app-api
    env_file:
      - ./env/.env.dev
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
    volumes:
      - .:/app # create volumn in current directory of container
      - /app/node_modules # anonymus/unnamed volumn in container
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - food_app_api
  redis:
    image: redis/redis-stack-server:${REDIS_VERSION}
    env_file:
      - ./env/.env.dev
    container_name: redis-stack-server
    volumes:
      - redis-data:/data
    networks:
      - food_app_api
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: unless-stopped
networks:
  food_app_api:
volumes:
  pgdata:
  pgadmin-data:
  foodEsData01:
  redis-data:
